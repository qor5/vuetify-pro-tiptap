// vite.config.ts
import { resolve } from "path";
import vue from "file:///Users/danielchan/thePlant/vuetify-pro-tiptap/node_modules/.pnpm/@vitejs+plugin-vue@5.2.1_vite@5.4.13_@types+node@22.10.7_sass@1.60.0__vue@3.5.13_typescript@5.5.4_/node_modules/@vitejs/plugin-vue/dist/index.mjs";
import { PluginPure } from "file:///Users/danielchan/thePlant/vuetify-pro-tiptap/node_modules/.pnpm/rollup-plugin-pure@0.2.1_rollup@3.29.5/node_modules/rollup-plugin-pure/dist/index.mjs";
import { Vuetify3Resolver } from "file:///Users/danielchan/thePlant/vuetify-pro-tiptap/node_modules/.pnpm/unplugin-vue-components@0.27.5_@babel+parser@7.26.5_rollup@3.29.5_vue@3.5.13_typescript@5.5.4_/node_modules/unplugin-vue-components/dist/resolvers.js";
import Components from "file:///Users/danielchan/thePlant/vuetify-pro-tiptap/node_modules/.pnpm/unplugin-vue-components@0.27.5_@babel+parser@7.26.5_rollup@3.29.5_vue@3.5.13_typescript@5.5.4_/node_modules/unplugin-vue-components/dist/vite.js";
import { defineConfig } from "file:///Users/danielchan/thePlant/vuetify-pro-tiptap/node_modules/.pnpm/vite@5.4.13_@types+node@22.10.7_sass@1.60.0/node_modules/vite/dist/node/index.js";
import dts from "file:///Users/danielchan/thePlant/vuetify-pro-tiptap/node_modules/.pnpm/vite-plugin-dts@4.5.0_@types+node@22.10.7_rollup@3.29.5_typescript@5.5.4_vite@5.4.13_@types+node@22.10.7_sass@1.60.0_/node_modules/vite-plugin-dts/dist/index.mjs";

// package.json
var dependencies = {
  "@tiptap/core": "^2.11.2",
  "@tiptap/extension-blockquote": "^2.11.2",
  "@tiptap/extension-bold": "^2.11.2",
  "@tiptap/extension-bullet-list": "^2.11.2",
  "@tiptap/extension-character-count": "^2.11.2",
  "@tiptap/extension-code": "^2.11.2",
  "@tiptap/extension-code-block": "^2.11.2",
  "@tiptap/extension-color": "^2.11.2",
  "@tiptap/extension-document": "^2.11.2",
  "@tiptap/extension-dropcursor": "^2.11.2",
  "@tiptap/extension-focus": "^2.11.2",
  "@tiptap/extension-font-family": "^2.11.2",
  "@tiptap/extension-gapcursor": "^2.11.2",
  "@tiptap/extension-hard-break": "^2.11.2",
  "@tiptap/extension-heading": "^2.11.2",
  "@tiptap/extension-highlight": "^2.11.2",
  "@tiptap/extension-history": "^2.11.2",
  "@tiptap/extension-horizontal-rule": "^2.11.2",
  "@tiptap/extension-image": "^2.11.2",
  "@tiptap/extension-italic": "^2.11.2",
  "@tiptap/extension-link": "^2.11.2",
  "@tiptap/extension-list-item": "^2.11.2",
  "@tiptap/extension-mention": "^2.11.2",
  "@tiptap/extension-ordered-list": "^2.11.2",
  "@tiptap/extension-paragraph": "^2.11.2",
  "@tiptap/extension-placeholder": "^2.11.2",
  "@tiptap/extension-strike": "^2.11.2",
  "@tiptap/extension-subscript": "^2.11.2",
  "@tiptap/extension-superscript": "^2.11.2",
  "@tiptap/extension-table": "^2.11.2",
  "@tiptap/extension-table-cell": "^2.11.2",
  "@tiptap/extension-table-header": "^2.11.2",
  "@tiptap/extension-table-row": "^2.11.2",
  "@tiptap/extension-task-item": "^2.11.2",
  "@tiptap/extension-task-list": "^2.11.2",
  "@tiptap/extension-text": "^2.11.2",
  "@tiptap/extension-text-align": "^2.11.2",
  "@tiptap/extension-text-style": "^2.11.2",
  "@tiptap/extension-underline": "^2.11.2",
  "@tiptap/html": "^2.11.2",
  "@tiptap/pm": "^2.11.2",
  "@tiptap/vue-3": "^2.11.2"
};

// vite.config.ts
var __vite_injected_original_dirname = "/Users/danielchan/thePlant/vuetify-pro-tiptap";
var deps = Object.keys(dependencies).reduce((result, k) => {
  const ignores = ["@tiptap/vue-3"];
  if (ignores.includes(k)) return result;
  const pattern = /[`~!@#$^\-&*()=|{}':;',\\[\].<>/?~！@#￥……&*（）——|{}【】'；：""'。，、？\s]/g;
  result[k] = k.replace(pattern, "");
  return result;
}, {});
var vite_config_default = defineConfig({
  plugins: [
    vue(),
    Components({
      dirs: void 0,
      dts: "types/components.d.ts",
      resolvers: [Vuetify3Resolver()]
    }),
    PluginPure({
      functions: ["Mark.create", "Extension.create", "Node.create"]
    }),
    dts({
      insertTypesEntry: true
    })
  ],
  optimizeDeps: {
    include: ["vue", "vuetify"]
  },
  resolve: {
    alias: {
      "@": resolve(__vite_injected_original_dirname, "src")
    }
  },
  build: {
    outDir: "lib",
    lib: {
      entry: resolve(__vite_injected_original_dirname, "src/index.ts"),
      name: "VuetifyProTiptap"
    },
    rollupOptions: {
      output: {
        exports: "named",
        globals: {
          vue: "Vue",
          vuetify: "Vuetify",
          vuetifyx: "Vuetifyx",
          "vuetify/components": "VuetifyComp"
        }
      },
      external: ["vue", "vuetify", "vuetifyx", "vuetify/components"]
    }
  }
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,
